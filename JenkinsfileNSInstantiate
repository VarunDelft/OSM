pipeline {
  agent any
  environment {
    def props = readJSON file: 'Test/TestData.json'
	def p = readJSON file : 'NSInstantiateConfig'
	def ret = 'abc'
  }
 
  stages {
    stage('GetAuth') {
      steps {
        script{
            p = readJSON file : 'NSInstantiateConfig' //properties
			withCredentials([usernamePassword(credentialsId:'308b3738-d625-4d02-9b25-9dc73758265c', passwordVariable:'PASSWORD', usernameVariable:'USER')]) { 
				
				ret = sh(script: "Scripts/OSMAuthCode.sh ${p.OSM_IP_PORT} ${USER} ${PASSWORD}", returnStdout: true).trim()
			}
		
        }
      }
    }
    
	stage('Create_NS'){
		steps{
			echo "Create_NS Stage" 
			script{
				
				
				NSid = sh(script: "Scripts/OSMNSCreate.sh '${ret}' '${p.OSM_IP_PORT}' '${p.NS_DESCRIPTOR_ID}' '${p.NS_NAME}' '${p.NS_DESCRIPTION}' '${p.OPEN_STACK_ACCOUNTID}'",returnStdout: true).trim()
				echo "${NSid}"
			}
		}
	}
	
	stage('Instantiate NS'){
		steps{
			echo "Instantiate_NS Stage" 
			script{
				
				
				NSInstanceID = sh(script: "Scripts/OSMNSInstantiate.sh '${ret}' '${p.OSM_IP_PORT}' '${p.NS_DESCRIPTOR_ID}' '${p.NS_NAME}' '${p.NS_DESCRIPTION}' '${p.OPEN_STACK_ACCOUNTID}' '${NSid}'",returnStdout: true).trim()
				echo "${NSInstanceID}"
			}
		}
	}

	stage('Get NS Detials'){
	stage('Get VNF Details'){
		steps{
			echo "Get VNF Details" 
			script{
				VNFDetails = sh(script: "Scripts/OSMNSGetIPs.sh '${ret}' '${p.OSM_IP_PORT}'",returnStdout: true).trim()
				echo "${VNFDetails}"
			}
		}
	}
	
	
  }  
  
  post {
        always {
            echo 'One way or another, I have finished'
           /* deleteDir() /* clean up our workspace */
        }
        success {
            echo 'I succeeeded!'
         
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
}
