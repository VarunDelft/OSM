pipeline {
  agent any
  environment {
    
	def p = 'abc'
	boolean NsConfigFilePresent =  fileExists 'NSInstantiateConfig'

	def cp = readJSON file : 'Data/ConfigData/OSMConfig.json'
	def ret = 'abc'
	def IPs = "A,B,C,D".split(',')
	def td = readJSON file:  'Data/Templates/InstanceDataTemplate.json'
	
  }
 stages{
stage('Run if expression ') {
	
    when {
        expression { (fileExists('NSInstantiateConfig')) }
    }  
  stages {
    stage('GetAuth') {
      steps {
        script{
            p = readJSON file : 'NSInstantiateConfig' //properties
			cp = readJSON file : 'Data/ConfigData/OSMConfig.json' //configuration file for current OSM instance
			withCredentials([usernamePassword(credentialsId:'308b3738-d625-4d02-9b25-9dc73758265c', passwordVariable:'PASSWORD', usernameVariable:'USER')]) { 
				
				ret = sh(script: "Scripts/OSMAuthCode.sh ${cp.OSM_IP_PORT_FOR_REST} ${USER} ${PASSWORD}", returnStdout: true).trim()
			}
		
        }
      }
    }
    
	stage('Create_NS'){
		steps{
			echo "Create_NS Stage" 
			script{
				
				
				NSid = sh(script: "Scripts/OSMNSCreate.sh '${ret}' '${cp.OSM_IP_PORT_FOR_REST}' '${p.NS_DESCRIPTOR_ID}' '${p.NS_NAME}' '${p.NS_DESCRIPTION}' '${cp.OPEN_STACK_ACCOUNTID}'",returnStdout: true).trim()
				echo "${NSid}"
			}
		}
	}
	
	stage('Instantiate NS'){
		steps{
			echo "Instantiate_NS Stage" 
			script{
				
				
				NSInstanceID = sh(script: "Scripts/OSMNSInstantiate.sh '${ret}' '${cp.OSM_IP_PORT_FOR_REST}' '${p.NS_DESCRIPTOR_ID}' '${p.NS_NAME}' '${p.NS_DESCRIPTION}' '${cp.OPEN_STACK_ACCOUNTID}' '${NSid}'",returnStdout: true).trim()
				echo "${NSInstanceID}"
			}
		}
	}

	stage('Get NS Detials'){
		steps{
			echo "Get NS Detials Stage" 
			script{
				NSDetailsJson = sh(script: "Scripts/OSMNSGetDetails.sh '${ret}' '${cp.OSM_IP_PORT_FOR_REST}' '${NSid}'",returnStdout: true).trim()
				writeFile file: "Data/GetIPsData.json", text:"${NSDetailsJson}"
				echo "${NSDetailsJson}"
				
			}
		}
	}
	
	stage('Wait for NS to be Ready'){
		steps{
			echo "Wait for NS to be Ready" 
			timeout(11){
				//waitUntil{
					script{
						def r = sh(script: "Scripts/OSMNSGetStatus.sh '${ret}' '${cp.OSM_IP_PORT_FOR_REST}' '${NSid}'",returnStdout: true).trim()
						//return ( r == 'Ready' )
						echo "${r}"
					}
				//}
			}
			
		}
		
	}
	
	
	stage('Get VNF Details'){
		steps{
			echo "Get VNF Details" 
			script{
				VNFIPAddresses = sh(script: "Scripts/OSMNSGetIPs.sh '${ret}' '${cp.OSM_IP_PORT_FOR_REST}' ",returnStdout: true).trim()
				echo "${VNFIPAddresses}"
				Ips = "${VNFIPAddresses}".split(',')
				echo "Firewall ${Ips[0]}"
				echo "Firewall ${Ips[1]}"
				echo "Seever ${Ips[2]}"
				echo "Server ${Ips[3]}"
				
				
				
			}
		}
	}	
	
	stage('Prepare Instance Specific Files'){
		steps{
			echo "Prepare Instance specifc files" 
			script{
				td = readFile file:  'Data/Templates/InstanceDataTemplate.json'
				echo "${td}"
				td = td.replace("__FIREWALL_EXT_IP__","${Ips[0]}")
				td = td.replace("__SERVER_EXT_IP__","${Ips[2]}")
				td = td.replace("__SERVER_INT_IP__","${Ips[3]}")
				sh  "mkdir InstanceSpecific/${p.NS_NAME}"
				writeFile file: "InstanceSpecific/${p.NS_NAME}/Data/InstanceData.json", text:"${td}"
				sh "git add InstanceSpecific/${p.NS_NAME}/Data/InstanceData.json"
				sh "git commit -m 'From Create Instance pipeline'"
				sh   "git config remote.origin.url https://github.com/prodaptconsulting/OSM.git"
				sh "git config user.email 'jignesh.karnik@prodapt.com'"
				sh "git config user.name 'prodaptconsulting'"
				sh "git push 'https://prodaptconsulting:thisisgitadmin789\$@github.com/prodaptconsulting/OSM.git' master"
			}
		}
	}
	
	
  }  
  
  post {
        always {
            echo 'One way or another, I have finished'
           /* deleteDir() /* clean up our workspace */
        }
        success {
            echo 'I succeeeded!'
            sh "git mv NSInstantiateConfig Archive/NSInstantiateConfig_`date '+%Y%m%d%H%M%S'`"
            sh "git commit -m 'From Manage firewall pipeline'`date '+%Y%m%d%H%M%S'`"
            sh   "git config remote.origin.url https://github.com/prodaptconsulting/OSM.git"
            sh "git config user.email 'jignesh.karnik@prodapt.com'"
            sh "git config user.name 'prodaptconsulting'"
            sh "git push 'https://prodaptconsulting:thisisgitadmin789\$@github.com/prodaptconsulting/OSM.git' master"

         
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
}
 }
}
